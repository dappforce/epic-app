name: Common CD setup
description: 'Sets up the environment for jobs during CD'

inputs:
  do_access_token:
    description: "K8S temporary credentials"
    required: true
  k8s_cluster_id:
    description: "Target cluster id"
    required: true
  deployment_name:
    description: "Target deployment to execute"
    required: true
  cf_zone_id:
    description: "Cloudflare Zone ID"
    required: true
  cf_login_mail:
    description: "Cloudflare login email"
    required: true
  cf_login_token:
    description: "Cloudflare login token"
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Extract main branch name
      if: ${{ inputs.deployment_name == 'production' }}
      shell: bash
      run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      id: extract_branch

    - name: Extract Development pre-release branch name
      if: ${{ inputs.deployment_name == 'development' }}
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/^dev\///')" >> $GITHUB_ENV
      id: extract_features_branch

    - name: Prepare environmental variables
      id: prep
      shell: bash
      run: |
        echo "image=dappforce/subsocial-web-app-epicapp:epicapp-${{ env.BRANCH_NAME }}-$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ inputs.do_access_token }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      shell: bash
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ inputs.k8s_cluster_id }}

# TODO: Uncomment the following steps when the HPA is ready
#    - name: Remove old HPA
#      if: ${{ inputs.deployment_name == 'production' }}
#      shell: bash
#      run: |
#        kubectl delete hpa -n epic-app mainnet-grillchat --ignore-not-found=true || kubectl delete hpa -n epic-app grillchat --ignore-not-found=true

    - name: Prepare pre-release deployment
      if: ${{ inputs.deployment_name == 'development' }}
      shell: bash
      run: |
        NAME=${{ env.BRANCH_NAME }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.deployment_name }}/all.yaml
        NAME=${{ env.BRANCH_NAME }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.deployment_name }}/deployment.yaml
        
        LOADBALANCER_IP=$(kubectl get svc -n nginx nginx-ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ inputs.cf_zone_id }}/dns_records" \
            -H "X-Auth-Email:${{ inputs.cf_login_email }}" \
            -H "Authorization:Bearer ${{ inputs.cf_login_token }}" \
            -H "Content-Type:application/json" \
            --data '{"type":"A","name":"dev-${{ env.BRANCH_NAME }}-epicapp.subsocial.network","content":"'$LOADBALANCER_IP'","ttl":3600,"priority":10,"proxied":true}'

    - name: Deploy EPIC to the ${{ inputs.deployment_name }} infrastructure
      shell: bash
      run: |
        sed -i 's|<IMAGE>|'${{ env.image }}'|' $GITHUB_WORKSPACE/deployment/${{ inputs.deployment_name }}/deployment.yaml
        kubectl apply -f $GITHUB_WORKSPACE/deployment/${{ inputs.deployment_name }}/all.yaml
        kubectl apply -f $GITHUB_WORKSPACE/deployment/${{ inputs.deployment_name }}/deployment.yaml

# TODO: Uncomment the following steps when the HPA is ready
#    - name: Add HPA for production
#      if: ${{ inputs.deployment_name == 'production' }}
#      shell: bash
#      run: |
#        kubectl rollout status -n epic-app deployment/mainnet-grillchat || kubectl rollout status -n epic-app deployment/grillchat
#        kubectl apply -f $GITHUB_WORKSPACE/deployment/${{ inputs.deployment_name }}/hpa.yaml
