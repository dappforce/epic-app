---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: epicapp-<BRANCH>
  name: epicapp-<BRANCH>
  namespace: epic-app
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: epicapp-<BRANCH>
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: epicapp-<BRANCH>
  namespace: epic-app
  annotations:
    ingress.kubernetes.io/from-to-www-redirect: 'true'
    nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
    nginx.org/client-max-body-size: '10m'
    nginx.ingress.kubernetes.io/proxy-body-size: '10m'
    nginx.ingress.kubernetes.io/client-max-body-size: '10m'
    nginx.ingress.kubernetes.io/use-regex: 'true'
spec:
  ingressClassName: nginx
  rules:
    - host: dev-<BRANCH>-epicapp.subsocial.network
      http:
        paths:
          - backend:
              service:
                name: epicapp-<BRANCH>
                port:
                  number: 3000
            path: '/'
            pathType: Prefix

  tls:
    - hosts:
        - dev-<BRANCH>-epicapp.subsocial.network
      secretName: subsocial-ssl

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: epicapp-<BRANCH>-env
  namespace: epic-app
data:
  REDIS_HOST: 'redis-epic-master.redis'
  REDIS_PORT: '6379'
